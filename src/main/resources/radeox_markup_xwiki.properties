macro.rss.name=rss
macro.image.name=image
macro.attach.name=attach
macro.style.name=style
macro.field.name=field
macro.display.name=display
macro.form.name=form
macro.graphviz.name=graphviz
macro.svg.name=svg
macro.charting.name=chart

# Added *strong* markup
filter.strong.match=(?<!\\*)\\*([^\\p{Space}](?:[^*\n]*+|\\*)*?(?<=[^\\p{Space}]))\\*(?!\\*)
filter.strong.print=<strong>$1</strong>

# Added __underline__ markup
filter.underline.match=(?<!_)__([^\\p{Space}](?:[^_\n]*+|_)*?(?<=[^\\p{Space}]))__(?!_)
filter.underline.print=<em class=\"underline\">$1</em>

filter.strikethrough.match=(?<![-!])--([^\\p{Space}>](?:[^-\n]*+|-)*?(?<=[^\\p{Space}]))--(?!-)
filter.strikethrough.print=<del>$1</del>

filter.italic.match=(?<!~)~~([^\\p{Space}](?:[^~\n]*+|~)*?(?<=[^\\p{Space}]))~~(?!~)
filter.italic.print=<em>$1</em>

# Modified this filter to not filter HTML
filter.escape.match=\\\\(\\\\\\\\)(?!\\\\)|\\\\(.)

filter.paragraph.match=(?:\r?[\n])(?:[ \t\r]*[\n])++
filter.paragraph.print=<p/>\n

# Replace link syntax with ours
filter.link.match=\\[(.+?)\\]

## This creates two backreferences (excluding \0, which is the whole link):
## \1 is the protocol (http)
## \2 is the URL excluding the protocol (www.xwiki.org?query)
#filter.url.match=(?<!["'=])((?:ht|f)tps?)://((?:%[\\p{Digit}A-Fa-f][\\p{Digit}A-Fa-f]|[-_.!~*';/?:@#&=+$,\\p{Alnum}])++)(?!(?i:(?:[^<]|<(?!/?a))*+</a>|(?:[^<]|<(?!/?script))*+</script>|[^<>]*+>))
filter.url.match=(?<!["'=])((?:ht|f)tps?)://((?:%[\\p{Digit}A-Fa-f][\\p{Digit}A-Fa-f]|[-_.!~*';/?:@#&=+$,\\p{Alnum}])++)(?!['">])
filter.url.print=<span class=\"nobr\"><a href=\"{0}\">{0}</a></span>

# Add anchor and optional TOC numbering into headings
filter.heading.match=(?-s)^[ \\t]*+(1(\\.1){0,5}+)[ \\t]++(.++)$
filter.heading.print=<h{3} id="{0}"><span>{1}{2}</span></h{3}>\n

filter.list.match=(?:^[\\p{Blank}]*+([-#*]++|[-#*iIaA1ghHkKj]++\\.)[\\p{Blank}]++([^\r\n]++)(?:(?:[ \t]*+[\r\n]++)*+))++

filter.newline.match=\\\\\\\\[\r\n]?

filter.line.match=(?<=^| )----++(?=$| )
filter.line.print=<hr/>
